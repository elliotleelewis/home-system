{
  "private": true,
  "license": "MIT",
  "workspaces": [
    "client",
    "schema",
    "server"
  ],
  "scripts": {
    "prettier": "prettier --check \"**/*.{md,ts,js,scss,html,json,yml,prisma}\" --ignore-path .gitignore",
    "prettier:fix": "prettier --write \"**/*.{md,ts,js,scss,html,json,yml,prisma}\" --ignore-path .gitignore",
    "lint": "eslint \"**/*.{ts,js,html}\" --ignore-path .gitignore",
    "lint:fix": "eslint --fix \"**/*.{ts,js,html}\" --ignore-path .gitignore",
    "stylelint": "stylelint \"**/*.{scss,html}\" --ignore-path .gitignore",
    "stylelint:fix": "stylelint \"**/*.{scss,html}\" --fix --ignore-path .gitignore"
  },
  "devDependencies": {
    "@angular-eslint/builder": "~13.1.0",
    "@angular-eslint/eslint-plugin": "~13.1.0",
    "@angular-eslint/eslint-plugin-template": "~13.1.0",
    "@angular-eslint/schematics": "~13.1.0",
    "@angular-eslint/template-parser": "~13.1.0",
    "@typescript-eslint/eslint-plugin": "^5.0.0",
    "@typescript-eslint/parser": "^5.0.0",
    "eslint": "^8.0.0",
    "eslint-config-prettier": "^8.0.0",
    "eslint-plugin-eslint-comments": "^3.0.0",
    "eslint-plugin-file-progress": "^1.0.0",
    "eslint-plugin-import": "^2.0.0",
    "eslint-plugin-jest": "^26.0.0",
    "eslint-plugin-jsdoc": "^38.0.0",
    "eslint-plugin-prefer-arrow": "^1.0.0",
    "postcss": "^8.0.0",
    "postcss-html": "^1.0.0",
    "prettier": "~2.6.0",
    "prettier-plugin-prisma": "~3.11.0",
    "stylelint": "^14.0.0",
    "stylelint-config-prettier": "^9.0.0",
    "stylelint-config-rational-order": "^0.1.0",
    "stylelint-config-standard-scss": "^3.0.0",
    "stylelint-order": "^5.0.0",
    "typescript": "~4.6.0"
  },
  "prettier": {
    "arrowParens": "always",
    "bracketSpacing": true,
    "endOfLine": "lf",
    "overrides": [
      {
        "files": [
          "*.json",
          "*.md",
          "*.yml"
        ],
        "options": {
          "tabWidth": 2,
          "useTabs": false
        }
      }
    ],
    "semi": true,
    "singleQuote": true,
    "tabWidth": 4,
    "trailingComma": "all",
    "useTabs": true
  },
  "eslintConfig": {
    "root": true,
    "plugins": [
      "file-progress"
    ],
    "extends": [
      "eslint:recommended",
      "plugin:eslint-comments/recommended"
    ],
    "rules": {
      "file-progress/activate": "warn",
      "curly": "error",
      "eqeqeq": [
        "error",
        "always"
      ],
      "lines-between-class-members": [
        "error",
        "always",
        {
          "exceptAfterSingleLine": true
        }
      ],
      "max-classes-per-file": [
        "error",
        1
      ],
      "no-empty": "error",
      "no-restricted-imports": [
        "error",
        {
          "paths": [
            "rxjs/Rx",
            "subsink/dist/subsink"
          ],
          "patterns": [
            "app/*",
            "rxjs/internal/*"
          ]
        }
      ]
    },
    "overrides": [
      {
        "files": [
          "*.ts"
        ],
        "parserOptions": {
          "project": [
            "tsconfig.json"
          ],
          "createDefaultProgram": true
        },
        "plugins": [
          "jest",
          "jsdoc"
        ],
        "extends": [
          "plugin:jest/recommended",
          "plugin:@typescript-eslint/recommended",
          "plugin:@typescript-eslint/recommended-requiring-type-checking",
          "plugin:@angular-eslint/ng-cli-compat",
          "plugin:@angular-eslint/ng-cli-compat--formatting-add-on",
          "prettier"
        ],
        "rules": {
          "@angular-eslint/component-max-inline-declarations": [
            "error",
            {
              "animations": 100,
              "styles": 0
            }
          ],
          "@angular-eslint/component-class-suffix": "error",
          "@angular-eslint/component-selector": [
            "error",
            {
              "type": "element",
              "prefix": "app",
              "style": "kebab-case"
            }
          ],
          "@angular-eslint/contextual-decorator": "error",
          "@angular-eslint/contextual-lifecycle": "error",
          "@angular-eslint/directive-class-suffix": "error",
          "@angular-eslint/directive-selector": [
            "error",
            {
              "type": "attribute",
              "prefix": "app",
              "style": "camelCase"
            }
          ],
          "@angular-eslint/no-attribute-decorator": "error",
          "@angular-eslint/no-conflicting-lifecycle": "error",
          "@angular-eslint/no-forward-ref": "error",
          "@angular-eslint/no-host-metadata-property": "error",
          "@angular-eslint/no-input-prefix": "error",
          "@angular-eslint/no-input-rename": "error",
          "@angular-eslint/no-inputs-metadata-property": "error",
          "@angular-eslint/no-lifecycle-call": "error",
          "@angular-eslint/no-output-native": "error",
          "@angular-eslint/no-output-on-prefix": "error",
          "@angular-eslint/no-output-rename": "error",
          "@angular-eslint/no-outputs-metadata-property": "error",
          "@angular-eslint/no-pipe-impure": "error",
          "@angular-eslint/no-queries-metadata-property": "error",
          "@angular-eslint/pipe-prefix": [
            "error",
            {
              "prefixes": [
                "app"
              ]
            }
          ],
          "@angular-eslint/prefer-on-push-component-change-detection": "warn",
          "@angular-eslint/prefer-output-readonly": "error",
          "@angular-eslint/relative-url-prefix": "error",
          "@angular-eslint/use-component-selector": "error",
          "@angular-eslint/use-component-view-encapsulation": "error",
          "@angular-eslint/use-injectable-provided-in": "error",
          "@angular-eslint/use-lifecycle-interface": "error",
          "@angular-eslint/use-pipe-transform-interface": "error",
          "@typescript-eslint/array-type": "error",
          "@typescript-eslint/ban-ts-comment": "error",
          "@typescript-eslint/ban-tslint-comment": "error",
          "@typescript-eslint/ban-types": "error",
          "@typescript-eslint/dot-notation": "error",
          "@typescript-eslint/explicit-member-accessibility": [
            "error",
            {
              "accessibility": "no-public"
            }
          ],
          "@typescript-eslint/explicit-module-boundary-types": "error",
          "@typescript-eslint/naming-convention": [
            "error",
            {
              "selector": "default",
              "format": [
                "camelCase"
              ],
              "leadingUnderscore": "forbid",
              "trailingUnderscore": "forbid"
            },
            {
              "selector": "typeLike",
              "format": [
                "PascalCase"
              ],
              "leadingUnderscore": "forbid",
              "trailingUnderscore": "forbid"
            },
            {
              "selector": "enumMember",
              "format": [
                "PascalCase"
              ]
            },
            {
              "selector": "parameter",
              "modifiers": [
                "unused"
              ],
              "format": [
                "camelCase"
              ],
              "leadingUnderscore": "require"
            },
            {
              "selector": "property",
              "modifiers": [
                "readonly",
                "static"
              ],
              "format": [
                "UPPER_CASE"
              ]
            },
            {
              "selector": "property",
              "modifiers": [
                "private"
              ],
              "format": [
                "camelCase"
              ],
              "leadingUnderscore": "require"
            },
            {
              "selector": "variable",
              "modifiers": [
                "const",
                "exported"
              ],
              "format": [
                "UPPER_CASE"
              ]
            },
            {
              "selector": "variable",
              "modifiers": [
                "const",
                "exported"
              ],
              "types": [
                "function"
              ],
              "format": [
                "camelCase"
              ]
            }
          ],
          "@typescript-eslint/member-ordering": "error",
          "@typescript-eslint/no-empty-function": "error",
          "@typescript-eslint/no-explicit-any": "error",
          "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
          "@typescript-eslint/no-non-null-assertion": "error",
          "@typescript-eslint/no-unused-vars": "error",
          "@typescript-eslint/no-var-requires": "error",
          "@typescript-eslint/unbound-method": "off",
          "import/first": "error",
          "import/newline-after-import": "error",
          "import/order": [
            "error",
            {
              "alphabetize": {
                "order": "asc"
              },
              "newlines-between": "always",
              "pathGroups": [
                {
                  "pattern": "@app-*/**",
                  "group": "external",
                  "position": "after"
                }
              ],
              "pathGroupsExcludedImportTypes": [
                "builtin"
              ]
            }
          ],
          "jsdoc/newline-after-description": "error",
          "jsdoc/no-types": "error",
          "no-underscore-dangle": "off"
        }
      },
      {
        "files": [
          "*.js"
        ],
        "parserOptions": {
          "ecmaVersion": 2017
        },
        "env": {
          "es6": true,
          "node": true
        },
        "extends": [
          "prettier"
        ]
      },
      {
        "files": [
          "*.html"
        ],
        "extends": [
          "plugin:@angular-eslint/template/recommended"
        ],
        "rules": {
          "@angular-eslint/template/accessibility-alt-text": "error",
          "@angular-eslint/template/accessibility-elements-content": "error",
          "@angular-eslint/template/accessibility-label-for": "error",
          "@angular-eslint/template/accessibility-table-scope": "error",
          "@angular-eslint/template/accessibility-valid-aria": "error",
          "@angular-eslint/template/banana-in-box": "error",
          "@angular-eslint/template/click-events-have-key-events": "error",
          "@angular-eslint/template/conditional-complexity": "error",
          "@angular-eslint/template/cyclomatic-complexity": "error",
          "@angular-eslint/template/mouse-events-have-key-events": "error",
          "@angular-eslint/template/no-any": "error",
          "@angular-eslint/template/no-autofocus": "error",
          "@angular-eslint/template/no-call-expression": "error",
          "@angular-eslint/template/no-distracting-elements": "error",
          "@angular-eslint/template/no-negated-async": "error",
          "@angular-eslint/template/no-positive-tabindex": "error",
          "@angular-eslint/template/use-track-by-function": "error"
        }
      }
    ]
  },
  "stylelint": {
    "extends": [
      "stylelint-config-standard-scss",
      "stylelint-config-rational-order",
      "stylelint-config-prettier"
    ],
    "rules": {
      "at-rule-no-unknown": null,
      "at-rule-no-vendor-prefix": true,
      "media-feature-name-no-vendor-prefix": true,
      "no-empty-source": null,
      "property-no-vendor-prefix": true,
      "selector-no-vendor-prefix": true,
      "selector-pseudo-element-colon-notation": "single",
      "selector-pseudo-element-no-unknown": [
        true,
        {
          "ignorePseudoElements": [
            "ng-deep"
          ]
        }
      ],
      "selector-type-no-unknown": null,
      "value-no-vendor-prefix": true,
      "scss/at-extend-no-missing-placeholder": null,
      "scss/at-rule-no-unknown": true
    },
    "overrides": [
      {
        "files": [
          "**/*.html"
        ],
        "customSyntax": "postcss-html"
      }
    ]
  }
}
